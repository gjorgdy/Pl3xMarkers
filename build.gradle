plugins {
    id "java"
    id "com.modrinth.minotaur" version "2.+"
}

project.version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

tasks {
    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        from("LICENSE") {
            rename { "${it}_${project.archivesBaseName}" }
        }

        archiveClassifier = ''

        dependsOn(':core:shadowJar', ':json:build', 'paper:build', 'fabric:remapJar')

        def manifestFiles = subprojects.collect {
            var file = it.layout.buildDirectory.file("libs/${project.name}-${it.name}-${project.version}.jar")
            return zipTree(file) ?: null
        }

        from(manifestFiles) {
            exclude("META-INF/MANIFEST.MF")
        }

        doFirst {
            manifestFiles.forEach {
                it.matching { include("META-INF/MANIFEST.MF") }.files.forEach {
                    manifest.from(it)
                }
            }
        }

        manifest {
            attributes(
                    'Main-Class': 'nl.gjorgdy.pl3xmarkers'
            )
        }
    }
}

static String getModrinthToken() {
    def envFile = new File('.env')
    if (!envFile.exists()) return ''
    return envFile.readLines()
            .findAll { it?.trim() && !it.trim().startsWith('#') }
            .collect { it.split('=') }
            .find { it[0] == 'MODRINTH_TOKEN' }[1]
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
modrinth {
    autoAddDependsOn = false
    token = getModrinthToken()
    projectId = project.mod_id
    versionName = "${archives_base_name} ${version}"
    versionNumber = "${version}"
    changelog = rootProject.file("changelog.md").text
    syncBodyFrom = rootProject.file("README.md").text
    versionType = project.mod_release_type
    uploadFile = jar
    gameVersions = [project.minecraft_version]
    loaders = ["fabric", "quilt", "paper", "purpur", "folia"]
    dependencies {
        required.project "fabric-api"
        required.version "pl3xmap", project.pl3xmap_version
    }
}
